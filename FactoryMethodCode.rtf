{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 public class Main \{\
    public static void main(String[] args) \{\
        Pizzeria p1 = new PizzeriaHawaiana();\
        Pizzeria p2 = new PizzeriaPepperoni();\
        Pizzeria p3 = new PizzeriaVegetariana();\
\
        p1.ordenarPizza();\
        p2.ordenarPizza();\
        p3.ordenarPizza();\
    \}\
\}\
\
// Interface Pizza\
interface Pizza \{\
    void preparar();\
\}\
\
// Clases concretas de Pizza\
class PizzaHawaiana implements Pizza \{\
    public void preparar() \{\
        System.out.println("Preparando Pizza Hawaiana con pi\'f1a y jam\'f3n.");\
    \}\
\}\
\
class PizzaPepperoni implements Pizza \{\
    public void preparar() \{\
        System.out.println("Preparando Pizza Pepperoni con queso extra.");\
    \}\
\}\
\
class PizzaVegetariana implements Pizza \{\
    public void preparar() \{\
        System.out.println("Preparando Pizza Vegetariana con vegetales frescos.");\
    \}\
\}\
\
// Clase abstracta Pizzeria\
abstract class Pizzeria \{\
    public Pizza ordenarPizza() \{\
        Pizza pizza = crearPizza();\
        pizza.preparar();\
        return pizza;\
    \}\
\
    protected abstract Pizza crearPizza();\
\}\
\
// F\'e1bricas concretas\
class PizzeriaHawaiana extends Pizzeria \{\
    protected Pizza crearPizza() \{\
        return new PizzaHawaiana();\
    \}\
\}\
\
class PizzeriaPepperoni extends Pizzeria \{\
    protected Pizza crearPizza() \{\
        return new PizzaPepperoni();\
    \}\
\}\
\
class PizzeriaVegetariana extends Pizzeria \{\
    protected Pizza crearPizza() \{\
        return new PizzaVegetariana();\
    \}\
\}\
}